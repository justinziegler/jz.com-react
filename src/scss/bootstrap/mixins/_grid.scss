// Grid system
//
// Generate semantic grid columns with these mixins.

// Centered container element
@use "sass:math";

@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  calc(floor(($gutter * 0.5)));
  padding-right: calc(ceil(($gutter * 0.5)));
  @include clearfix;
}

// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  calc(ceil(math.div($gutter, -2)));
  margin-right: calc(floor(math.div($gutter, -2)));
  @include clearfix;
}

// Generate the extra small columns
@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  float: left;
  width: calc(percentage(math.div($columns, $grid-columns)));
  min-height: 1px;
  padding-left:  calc(($gutter / 2));
  padding-right: calc(($gutter / 2));
}
@mixin make-xs-column-offset($columns) {
  margin-left: calc(percentage(math.div($columns, $grid-columns)));
}
@mixin make-xs-column-push($columns) {
  left: calc(percentage(math.div($columns, $grid-columns)));
}
@mixin make-xs-column-pull($columns) {
  right: calc(percentage(math.div($columns, $grid-columns)));
}

// Generate the small columns
@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  calc(($gutter / 2));
  padding-right: calc(($gutter / 2));

  @media (min-width: $screen-sm-min) {
    float: left;
    width: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-sm-column-offset($columns) {
  @media (min-width: $screen-sm-min) {
    margin-left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-sm-column-push($columns) {
  @media (min-width: $screen-sm-min) {
    left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-sm-column-pull($columns) {
  @media (min-width: $screen-sm-min) {
    right: calc(percentage(math.div($columns, $grid-columns)));
  }
}

// Generate the medium columns
@mixin make-md-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  calc(($gutter / 2));
  padding-right: calc(($gutter / 2));

  @media (min-width: $screen-md-min) {
    float: left;
    width: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-md-column-offset($columns) {
  @media (min-width: $screen-md-min) {
    margin-left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-md-column-push($columns) {
  @media (min-width: $screen-md-min) {
    left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-md-column-pull($columns) {
  @media (min-width: $screen-md-min) {
    right: calc(percentage(math.div($columns, $grid-columns)));
  }
}

// Generate the large columns
@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  calc(($gutter / 2));
  padding-right: calc(($gutter / 2));

  @media (min-width: $screen-lg-min) {
    float: left;
    width: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-lg-column-offset($columns) {
  @media (min-width: $screen-lg-min) {
    margin-left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-lg-column-push($columns) {
  @media (min-width: $screen-lg-min) {
    left: calc(percentage(math.div($columns, $grid-columns)));
  }
}
@mixin make-lg-column-pull($columns) {
  @media (min-width: $screen-lg-min) {
    right: calc(percentage(math.div($columns, $grid-columns)));
  }
}
